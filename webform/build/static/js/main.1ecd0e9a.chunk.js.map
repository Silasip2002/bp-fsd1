{"version":3,"sources":["actions/GoogleMapController.js","components/googleMap/GoogleMap.js","actions/TagController.js","components/createUserForm/CreateUserForm.js","components/listUserTable/ListUserTable.js","components/container/Container.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["GoogleMapSlice","createSlice","name","initialState","mapCenter","reducers","setMapCenter","state","payload","console","log","getMapCenter","actions","GoogleMap","useState","lat","lng","center","setCenter","zoom","addressObject","useSelector","googleMap","useEffect","style","display","margin","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","tagSlice","process","REACT_APP_API_URL","selectedTag","setSelectedTag","getSelectedTag","CreateUserForm","dispatch","useDispatch","setShowMap","setName","email","setEmail","phone","setPhone","address","setAddress","history","useHistory","userId","nextId","id","useParams","fetchData","a","API","get","data","handleSubmit","event","preventDefault","body","post","push","className","onSubmit","Grid","container","spacing","item","xs","TextField","label","variant","required","value","onInput","e","target","onClick","prev","geocodeByAddress","then","results","getLatLng","latLng","catch","error","InputProps","endAdornment","InputAdornment","position","IconButton","Button","color","backgroundColor","type","Grow","ListUserTable","users","setUsers","loading","setLoading","apiResult","handleDelete","userIdObj","delete","TableContainer","Table","TableBody","TableRow","TableCell","map","user","component","scope","slice","Container","props","tag","match","tabNameToIndex","params","page","AppBar","background","Tabs","onChange","newValue","textColor","TabIndicatorProps","centered","Tab","App","exact","from","to","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","tagController","GoogleMapController","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.1ecd0e9a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const GoogleMapSlice = createSlice({\n  name: \"googleMap\",\n  initialState: {\n    mapCenter: {},\n  },\n  reducers: {\n    setMapCenter: (state, payload) => {\n      console.log(\"In the map controller  \");\n      console.log(payload.payload);\n      state.mapCenter = payload.payload;\n    },\n    getMapCenter: (state) => {\n      return state.mapCenter;\n    },\n  },\n});\n\nexport const { setMapCenter, getMapCenter } = GoogleMapSlice.actions;\n\nexport default GoogleMapSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { useSelector } from \"react-redux\";\nimport { getMapCenter } from \"../../actions/GoogleMapController\";\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\nexport default function GoogleMap() {\n  const [center, setCenter] = useState({ lat: 30.3193039, lng: 114.1693611 });\n  const [zoom, setZoom] = useState(11);\n\n  const addressState = useSelector(getMapCenter);\n  const addressObject = addressState.payload.googleMap.mapCenter;\n\n  useEffect(() => {\n    console.log(addressObject.lat);\n    if (addressObject) {\n      setCenter({ lat: addressObject.lat, lng: addressObject.lng });\n    }\n  }, [addressObject]);\n\n  // const updateLocation = () => {\n  //   setCenter(addressObject);\n  // };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        margin: \"0 auto\",\n        height: \"50vh\",\n        width: \"50%\",\n       \n      }}\n    >\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyAj8n3QtpkgiHqjaxrFufUbxFMX0T3j7Sc\" }}\n        defaultCenter={center}\n        defaultZoom={zoom}\n      >\n        {/* <AnyReactComponent\n          lat={addressObject.lat}\n          lng={addressObject.lng}\n          text=\"My Marker\"\n        /> */}\n      </GoogleMapReact>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst api_url = process.env.REACT_APP_API_URL;\n\nexport const tagSlice = createSlice({\n  name: \"tag\",\n  initialState: {\n    selectedTag: 0,\n  },\n  reducers: {\n    setSelectedTag: (state, payload) => {\n      state.selectedTag = payload.payload;\n    },\n    getSelectedTag: (state) => {\n      return state.selectedTag;\n    },\n  },\n});\n\nexport const { setSelectedTag, getSelectedTag } = tagSlice.actions;\n\nexport default tagSlice.reducer;\n","import { React, useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./CreateUserForm.css\";\nimport GoogleMap from \"../googleMap/GoogleMap\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { setSelectedTag } from \"../../actions/TagController\";\nimport { setMapCenter } from \"../../actions/GoogleMapController\";\nimport { useDispatch } from \"react-redux\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport {\n  IconButton,\n  Button,\n  InputAdornment,\n  Grow,\n  Grid,\n  Container,\n} from \"@material-ui/core\";\nimport API from \"axios\";\nimport nextId from \"react-id-generator\";\nimport { useHistory, useParams } from \"react-router\";\n\nexport default function CreateUserForm() {\n  const dispatch = useDispatch();\n  const [showMap, setShowMap] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const history = useHistory();\n\n  let userId = nextId();\n  let id = useParams().id;\n\n  useEffect(() => {\n    if (id) {\n      // get data vai api by id\n      fetchData();\n      // assign data into the value\n    }\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const { data } = await API.get(\n        `https://p4gp6vy8c1.execute-api.us-east-2.amazonaws.com/dev/user?userId=${id}`\n      );\n      setName(data.name);\n      setEmail(data.email);\n      setPhone(data.phone);\n      setAddress(data.address);\n    } catch (error) {\n      console.log(`fail to get user data ${error}`);\n    }\n  };\n\n  const handleShowMap = () => {\n    setShowMap((prev) => !prev);\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        console.log(\"in th create from \", latLng);\n\n        // update center state\n        dispatch(setMapCenter(latLng));\n      })\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"data submit\");\n    console.log(\n      `name ${name} , email ${email} , phone ${phone} ,address ${address}`\n    );\n    const body = {\n      userId,\n      name,\n      email,\n      phone,\n      address,\n    };\n\n    try {\n      const res = await API.post(\n        \"https://p4gp6vy8c1.execute-api.us-east-2.amazonaws.com/dev/user\",\n        body\n      );\n      if (res) {\n        history.push(`/listUser`);\n        dispatch(setSelectedTag(1));\n        console.log(`save!`);\n      }\n    } catch (error) {\n      console.log(`Error ${error}`);\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"formContainer\" onSubmit={handleSubmit}>\n        <Grid container spacing={4} className=\"inputFieldContainer\">\n          <Grid item xs={12}>\n            <TextField\n              className=\"textFiled\"\n              id=\"name\"\n              label=\"Name\"\n              variant=\"filled\"\n              required\n              value={name}\n              onInput={(e) => setName(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              className=\"textFiled\"\n              id=\"email\"\n              label=\"Email\"\n              variant=\"filled\"\n              required\n              value={email}\n              onInput={(e) => setEmail(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            {\" \"}\n            <TextField\n              className=\"textFiled\"\n              id=\"phoneNumber\"\n              label=\"Phone Number\"\n              variant=\"filled\"\n              required\n              value={phone}\n              onInput={(e) => setPhone(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              className=\"textFiled\"\n              id=\"address\"\n              label=\"Address\"\n              variant=\"filled\"\n              required\n              value={address}\n              onInput={(e) => setAddress(e.target.value)}\n              onClick={handleShowMap}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={6}>\n            <Button\n              className=\"confirm__btn\"\n              style={{ color: \"white\", backgroundColor: \"blueviolet\" }}\n              variant=\"outlined\"\n              type=\"submit\"\n            >\n              Save\n            </Button>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Button\n              className=\"cancel__btn\"\n              style={{ color: \"blueviolet\", backgroundColor: \"white\" }}\n              variant=\"outlined\"\n              type=\"reset\"\n            >\n              Delete\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n\n      <Grow spacing={8}>\n        <GoogleMap />\n      </Grow>\n    </div>\n  );\n}\n","import { React, useEffect, useState } from \"react\";\nimport { setSelectedTag } from \"../../actions/TagController\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Table,\n  TableContainer,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button,\n} from \"@material-ui/core\";\nimport \"./ListUserTable.css\";\nimport API from \"axios\";\nimport { useHistory } from \"react-router\";\n\nexport default function ListUserTable() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const usersApiUrl =\n    \"https://p4gp6vy8c1.execute-api.us-east-2.amazonaws.com/dev/users\";\n\n  const userApiUrl =\n    \"https://p4gp6vy8c1.execute-api.us-east-2.amazonaws.com/dev/user\";\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const apiResult = await API.get(usersApiUrl);\n      setUsers(apiResult.data.users);\n      setLoading(false);\n    } catch (error) {\n      console.log(`List users fail : ${error}`);\n    }\n  };\n\n  const handleDelete = async (userId) => {\n    const userIdObj = { userId: userId };\n    try {\n      const apiResult = await API.delete(userApiUrl, userIdObj);\n      if (apiResult) {\n        console.log(`Delete success!`);\n      }\n    } catch (error) {\n      console.log(`Delete fail :  ${error}`);\n    }\n  };\n\n  const handleEdit = (userId) => {\n    dispatch(setSelectedTag(0));\n    history.push(`/createUser/${userId}`);\n  };\n\n  return (\n    <div className=\"listUserTable__container\">\n      <TableContainer>\n        <Table>\n          <TableBody>\n            {loading || !users ? (\n              <TableRow>\n                <TableCell>Loading</TableCell>\n              </TableRow>\n            ) : (\n              users.map((user) => {\n                return (\n                  <TableRow key={user.userId}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <h4 className=\"userName\">{user.name}</h4>\n                      <p className=\"userDetails\">\n                        {user.email} | ({user.phone.slice(0, 3)})\n                        {user.phone.slice(3, 7)}-{user.phone.slice(7)}\n                        <br />\n                        {user.address}\n                      </p>\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Button\n                        style={{\n                          color: \"blueviolet\",\n                          backgroundColor: \"white\",\n                        }}\n                        className=\"cancel__btn\"\n                        variant=\"outlined\"\n                        onClick={() => handleEdit(user.userId)}\n                      >\n                        Edit\n                      </Button>\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Button\n                        style={{\n                          color: \"blueviolet\",\n                          backgroundColor: \"white\",\n                        }}\n                        className=\"cancel__btn\"\n                        variant=\"outlined\"\n                        onClick={() => {\n                          handleDelete(user.userId);\n                        }}\n                        type=\"submit\"\n                      >\n                        Delete\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport CreateUserForm from \"../createUserForm/CreateUserForm\";\nimport ListUserTable from \"../listUserTable/ListUserTable\";\nimport \"./Container.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { setSelectedTag, getSelectedTag } from \"../../actions/TagController\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Container(props) {\n  const dispatch = useDispatch();\n  let selectedTag = useSelector(getSelectedTag).payload.tag.selectedTag;\n\n  const { match, history } = props;\n  const { params } = match;\n  const { page } = params;\n\n  const tabNameToIndex = {\n    0: \"createUser\",\n    1: \"listUser\",\n  };\n\n  const indexToTabName = {\n    createUser: 0,\n    listUser: 1,\n  };\n\n  // const [selectedTag, setSelectedTag] = React.useState(indexToTabName[page]);\n\n  const handleChange = (event, newValue) => {\n    history.push(`/${tabNameToIndex[newValue]}`);\n    dispatch(setSelectedTag(newValue));\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\" style={{ background: \"#5525E4\" }}>\n        <Tabs\n          value={selectedTag}\n          onChange={handleChange}\n          textColor=\"inherit\"\n          variant=\"fullWidth\"\n          aria-label=\"BrokerPacket Test\"\n          TabIndicatorProps={{ style: { background: \"white\" } }}\n          centered={true}\n        >\n          <Tab label=\"CREATE USER\"></Tab>\n          <Tab label=\"LIST USER\"></Tab>\n        </Tabs>\n      </AppBar>\n      {selectedTag === 0 && <CreateUserForm />}\n      {selectedTag === 1 && <ListUserTable />}\n    </>\n  );\n}\n","import \"./App.css\";\nimport Container from \"./components/container/Container\";\nimport CreateUserForm from \"./components/createUserForm/CreateUserForm\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/createUser\" />\n          <Route\n            exact\n            path=\"/:page?\"\n            render={(props) => <Container {...props} />}\n          />\n          <Route path=\"/createUser/:id\" component={Container} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport tagController from \"../src/actions/TagController\";\nimport GoogleMapController from \"./actions/GoogleMapController\";\n\nexport default configureStore({\n  reducer: {\n    tag: tagController,\n    googleMap: GoogleMapController,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"../src/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}